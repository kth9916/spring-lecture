<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="mapper.order">

<resultMap id="orderResult" type="OrderVO">
		<result property="order_code" column="order_code" />
		<result property="order_member_id" column="order_member_id" />
		<result property="order_member_name" column="order_member_name" />
		<result property="order_pro_quantity" column="order_pro_quantity" />
		<result property="order_price" column="order_price" />
		<result property="order_discount" column="order_discount" />
		
		<result property="receiver" column="receiver" />
		<result property="receiver_hp1" column="receiver_hp1" />
		<result property="receiver_hp2" column="receiver_hp2" />
		<result property="receiver_hp3" column="receiver_hp3" />
		<result property="receiver_tel1" column="receiver_tel1" />
		<result property="receiver_tel2" column="receiver_tel2" />
		<result property="receiver_tel3" column="receiver_tel3" />
		
		<result property="delivery_addr1" column="delivery_addr1" />
		<result property="delivery_addr2" column="delivery_addr2" />
		<result property="delivery_addr3" column="delivery_addr3" />
		<result property="delivery_addr4" column="delivery_addr4" />
		<result property="delivery_how" column="delivery_how" />
		<result property="delivery_status" column="delivery_status" />
		
		<result property="request_to_delivery" column="request_to_delivery" />
		
		<result property="who_pay" column="who_pay" />
		<result property="how_pay" column="how_pay" />
		<result property="which_bank" column="which_bank" />
		<result property="company_name_of_card" column="company_name_of_card" />
		<result property="card_split" column="card_split" />
		<result property="date_pay" column="date_pay" />
		
		<result property="order_pro_detail_code" column="order_pro_detail_code" />
		<result property="order_member_code" column="order_member_code" />
		<result property="order_nonmember_code" column="order_nonmember_code" />

	</resultMap>
	
	<select id="selectAllOrderList">
		select * from order_info 
	</select>
	
 	<insert id="insertNewOrder" parameterType="java.util.Map">
	
 	<choose>
 		<when test="order_pro_detail_code !=null">
 			insert into order_info values(SEQ_ORDER_ID.nextval,#{order_member_id},#{order_member_name},
									#{order_pro_quantity},#{order_price} / #{order_pro_quantity},#{order_discount},#{receiver}
									,#{receiver_hp1},#{receiver_hp2},#{receiver_hp3}
									,#{receiver_tel1},#{receiver_tel2},#{receiver_tel3}
									,#{delivery_addr1},#{delivery_addr2},#{delivery_addr3}
									,#{delivery_addr4},#{delivery_how},#{delivery_status}
									,#{request_to_delivery},#{how_pay},#{who_pay}
									,#{which_bank},#{company_name_of_card},#{card_split}
									,SYSDATE,#{order_pro_detail_code}
									<if test="order_member_code !=null and !order_member_code.equals('')">
									,#{order_member_code}, null
									</if>
									<if test="order_nonmember_code !=null and !order_nonmember_code.equals('')">
									,null ,#{order_nonmember_code}
									</if>
	)
 		
 		</when>
 			
 		<otherwise>
 			
 			<foreach collection="orderList" item="detailMap"  open="insert all" separator="" close="select 1 from dual">
 			into order_info values
 			
 			 (#{seq_order_id},#{order_member_id},#{order_member_name},
									#{detailMap.pro_detail_code_quantity},#{detailMap.pro_detail_code_price},#{order_discount},#{receiver}
									,#{receiver_hp1},#{receiver_hp2},#{receiver_hp3}
									,#{receiver_tel1},#{receiver_tel2},#{receiver_tel3}
									,#{delivery_addr1},#{delivery_addr2},#{delivery_addr3}
									,#{delivery_addr4},#{delivery_how},#{delivery_status}
									,#{request_to_delivery},#{how_pay},#{who_pay}
									,#{which_bank},#{company_name_of_card},#{card_split}
									,SYSDATE,#{detailMap.pro_detail_code}
									<if test="order_member_code !=null and !order_member_code.equals('')">
									,#{order_member_code}, null
									</if>
									<if test="order_nonmember_code !=null and !order_nonmember_code.equals('')">
									,null ,#{order_nonmember_code}
								 	</if>
			)
			</foreach>
			
 		</otherwise>
 	</choose>
	</insert>
	
	<select id="seq_order_id_nextval" resultType="java.lang.Integer">
		select SEQ_ORDER_ID.nextval from dual
	</select>
	
	<select id="selectAverageOrder" resultType="int" parameterType="int">
		select sum(order_pro_quantity * order_price - order_discount / order_pro_quantity)/count(distinct order_code) from order_info where order_member_code =#{member_code}
	</select>
	
	<select id="haveOrdered" parameterType="int" resultType="String">
		select decode(count(order_member_code),0,'false','true') from order_info  where order_member_code = #{member_code}
		
	</select>
	
	<select id="onDelivery" parameterType="java.util.Map" resultType="String">
		select count(delivery_status) from order_info where order_member_code= #{member_code} and delivery_status = #{delivery_status}
	</select>
	
	<select id="get_OrderList" resultType="OrderVO" parameterType="map">
		select a.*, img.pro_imagefilename , p.pro_name from 
			(select order_code , date_pay , order_pro_quantity , order_price , delivery_status ,
			how_pay, order_member_name,request_to_delivery, order_pro_detail_code,
			delivery_how, which_bank, company_name_of_card,
			pd.pro_code , pd.pro_color , pd.pro_size
			from order_info o , product_detail pd 
			where o.order_pro_detail_code = pd.pro_detail_code 
			and
			<if test="col.equals('member')">
			 o.order_member_code </if>
			 <if test="col.equals('nonmember')">
			 o.order_nonmember_code</if>
			 = #{code}
			 <choose>
			 	<when test="order_code != null">
			 	 and o.order_code = #{order_code}
			 	</when>
			 	<otherwise></otherwise>
			 </choose>
			 <if test="delivery_status !=null">
			 	and o.delivery_status= #{delivery_status}
			 </if>
			 ) a
			, product_image img , product p  where img.pro_code = a.pro_code and img.pro_imagefilename like '%main%'
			and p.pro_code = a.pro_code order by a.order_code desc
	</select>
	
	<select id="order_code_groupCount" parameterType="map"
	resultType="java.lang.Integer">
		select count(*) from order_info
		where
		<if test="col.equals('member')">
		order_member_code </if> 
		<if test="col.equals('nonmember')">
		order_nonmember_code</if>
		= #{code}
		group by order_code order by order_code desc
	</select>
	
	<select id="order_Detail" resultType="OrderVO" parameterType="map">
		select order_code ,DATE_PAY , order_member_name , order_discount , receiver , receiver_tel1,
		receiver_tel2,receiver_tel3, request_to_delivery ,
		delivery_addr1,delivery_addr2,delivery_addr3,delivery_addr4 , sum(order_price * order_pro_quantity) "order_price" 
		 from order_info
		where
		order_code = #{order_code}
		 and
		 <if test="col.equals('member')">
		 order_member_code </if> 
		 <if test="col.equals('nonmember')">
		 order_nonmember_code </if>
		 = #{code} 
		 group by order_code ,DATE_PAY , order_member_name , request_to_delivery ,
		  order_discount , receiver , receiver_tel1,
		receiver_tel2,receiver_tel3,delivery_addr1,delivery_addr2,delivery_addr3,delivery_addr4 
	</select>
	
	<select id="haveRefunded" parameterType="java.util.Map" resultType="String">
		select decode(count(order_code),0,'false','true') from order_info 
		where order_member_code =#{code} and delivery_status=#{delivery_status}
	</select>
	<select id="onRefund" parameterType="java.util.Map" resultType="String">
		select count(order_code) from order_info 
		where order_member_code =#{code} and delivery_status=#{delivery_status}
	</select>
	
</mapper> 